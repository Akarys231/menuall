import React, { useState, useEffect } from "react";
import { motion, AnimatePresence } from "framer-motion";
import { ChevronDown, ChevronUp, Check } from "lucide-react";

const AddressContainer = ({ setSelectedBranchId }) => {
    const [isOpen, setIsOpen] = useState(false);
    const [selectedBranch, setSelectedBranch] = useState("Филиал 1");

    const branches = [
        { id: 1, name: "Филиал 1", address: "адрес", instagram: "@filial1", whatsapp: "wa.me/filial1" },
        { id: 2, name: "Филиал 2", address: "адрес", instagram: "@filial2", whatsapp: "wa.me/filial2" },
        { id: 3, name: "Филиал 3", address: "адрес", instagram: "@filial3", whatsapp: "wa.me/filial3" },
    ];

    useEffect(() => {
        const foundBranch = branches.find((branch) => branch.name === selectedBranch);
        setSelectedBranchId(foundBranch?.id || null);
    }, [selectedBranch, setSelectedBranchId]);

    return (
        <div className="w-full max-w-[1024px] bg-white p-4 rounded-2xl shadow-md mt-6">
            <div
                className="flex items-center justify-between cursor-pointer"
                onClick={() => setIsOpen(!isOpen)}
            >
                <div className="flex items-center space-x-2">
                    <svg width="34" height="25" viewBox="0 0 21 20" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M20.0331 10.2211C20.0331 4.92458 15.7394 0.630859 10.4428 0.630859C5.14626 0.630859 0.852539 4.92458 0.852539 10.2211C0.852539 15.5177 5.14626 19.8114 10.4428 19.8114C15.7394 19.8114 20.0331 15.5177 20.0331 10.2211Z" fill="#FDCC45"/>
                        <path d="M6.7 13.248C6.85913 13.196 7.03018 13.217 7.17552 13.3062C7.32086 13.3955 7.42859 13.5458 7.475 13.724C7.52141 13.9022 7.50271 14.0938 7.42301 14.2566C7.3433 14.4194 7.20913 14.54 7.05 14.592C6.7375 14.6942 6.5125 14.802 6.36813 14.9C6.51688 15.0001 6.75187 15.1121 7.07812 15.2164C7.8 15.4474 8.83313 15.6 10 15.6C11.1669 15.6 12.2 15.4474 12.9219 15.2164C13.2487 15.1121 13.4831 15.0001 13.6319 14.9C13.4881 14.802 13.2631 14.6942 12.9506 14.592C12.794 14.5377 12.6627 14.4167 12.585 14.255C12.5073 14.0933 12.4894 13.9039 12.5353 13.7276C12.5811 13.5513 12.6869 13.4022 12.83 13.3125C12.973 13.2228 13.1418 13.1996 13.3 13.248C13.7175 13.3845 14.1 13.5595 14.3938 13.7842C14.6656 13.9935 15 14.3582 15 14.9C15 15.4481 14.6575 15.8156 14.3813 16.0249C14.0825 16.2503 13.6919 16.426 13.265 16.5625C12.4038 16.839 11.25 17 10 17C8.75 17 7.59625 16.839 6.735 16.5625C6.30813 16.426 5.9175 16.2503 5.61875 16.0249C5.3425 15.8149 5 15.4481 5 14.9C5 14.3582 5.33437 13.9935 5.60625 13.7842C5.9 13.5595 6.2825 13.3845 6.7 13.248ZM10 3C11.2432 3 12.4355 3.55312 13.3146 4.53769C14.1936 5.52226 14.6875 6.85761 14.6875 8.25C14.6875 10.0476 13.8125 11.5092 12.9062 12.548C12.546 12.9567 12.1589 13.3346 11.7481 13.6785C11.3769 13.9907 10.5281 14.5759 10.5281 14.5759C10.3671 14.6784 10.1852 14.7323 10 14.7323C9.81484 14.7323 9.63285 14.6784 9.47187 14.5759C9.05066 14.3023 8.64336 14.0027 8.25187 13.6785C7.84052 13.3355 7.45334 12.9575 7.09375 12.548C6.1875 11.5092 5.3125 10.0476 5.3125 8.25C5.3125 6.85761 5.80636 5.52226 6.68544 4.53769C7.56451 3.55312 8.7568 3 10 3ZM10 4.4C9.08832 4.4 8.21398 4.80562 7.56932 5.52764C6.92466 6.24965 6.5625 7.22892 6.5625 8.25C6.5625 9.5212 7.185 10.6496 7.9875 11.568C8.59125 12.2596 9.25625 12.786 9.71688 13.1094L10 13.3012L10.2831 13.1094C10.7431 12.786 11.4088 12.2596 12.0125 11.5687C12.815 10.6496 13.4375 9.5219 13.4375 8.25C13.4375 7.22892 13.0753 6.24965 12.4307 5.52764C11.786 4.80562 10.9117 4.4 10 4.4ZM10 6.15C10.2462 6.15 10.49 6.20432 10.7175 6.30985C10.945 6.41539 11.1517 6.57007 11.3258 6.76508C11.4999 6.96008 11.638 7.19158 11.7323 7.44636C11.8265 7.70115 11.875 7.97422 11.875 8.25C11.875 8.52578 11.8265 8.79885 11.7323 9.05364C11.638 9.30842 11.4999 9.53992 11.3258 9.73492C11.1517 9.92993 10.945 10.0846 10.7175 10.1901C10.49 10.2957 10.2462 10.35 10 10.35C9.50272 10.35 9.02581 10.1288 8.67417 9.73492C8.32254 9.3411 8.125 8.80695 8.125 8.25C8.125 7.69305 8.32254 7.1589 8.67417 6.76508C9.02581 6.37125 9.50272 6.15 10 6.15ZM10 7.55C9.83424 7.55 9.67527 7.62375 9.55806 7.75503C9.44085 7.8863 9.375 8.06435 9.375 8.25C9.375 8.43565 9.44085 8.6137 9.55806 8.74497C9.67527 8.87625 9.83424 8.95 10 8.95C10.1658 8.95 10.3247 8.87625 10.4419 8.74497C10.5592 8.6137 10.625 8.43565 10.625 8.25C10.625 8.06435 10.5592 7.8863 10.4419 7.75503C10.3247 7.62375 10.1658 7.55 10 7.55Z" fill="black"/>
                    </svg>
                    <span className="text-base font-medium">{selectedBranch}</span>
                </div>
                {isOpen ? <ChevronUp className="text-gray-500" size={20} /> : <ChevronDown className="text-gray-500" size={20} />}
            </div>

            <AnimatePresence>
                {isOpen && (
                    <motion.div
                        initial={{ height: 0, opacity: 0 }}
                        animate={{ height: "auto", opacity: 1 }}
                        exit={{ height: 0, opacity: 0 }}
                        transition={{ duration: 0.3 }}
                        className="mt-2 border-t border-gray-300 pt-2 overflow-hidden"
                    >
                        {branches.map((branch) => (
                            <div
                                key={branch.id}
                                className="flex items-center justify-between p-2 hover:bg-gray-100 rounded-lg cursor-pointer"
                                onClick={() => {
                                    setSelectedBranch(branch.name);
                                    setIsOpen(false);
                                }}
                            >
                                <div className="flex items-center space-x-2">
                                    <div className="w-6 h-6 bg-gray-300 rounded-md"></div>
                                    <div className="flex flex-col">
                                        <span className="text-sm font-medium">{branch.name}</span>
                                        <span className="text-xs text-gray-500">{branch.address}</span>
                                    </div>
                                </div>
                                {selectedBranch === branch.name && <Check className="text-gray-500" size={20} />}
                            </div>
                        ))}
                    </motion.div>
                )}
            </AnimatePresence>

            <hr className="my-2" />

            <div className="flex space-x-2">

                <a
                    href={`https://instagram.com/${branches.find((branch) => branch.name === selectedBranch)?.instagram}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center bg-yellow-400 text-black px-3 py-2 rounded-full text-sm shadow w-1/2 justify-center active:scale-95 transition"
                >
                    <svg width="24" height="20" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                    <path d="M10 5C10 2.23858 7.76142 0 5 0C2.23858 0 0 2.23858 0 5C0 7.76142 2.23858 10 5 10C7.76142 10 10 7.76142 10 5Z" fill="#202022"/>
                    <path d="M4.99994 4.23047C4.79594 4.23047 4.60029 4.31151 4.45602 4.45578C4.31175 4.60005 4.23071 4.7957 4.23071 4.9997C4.23071 5.2037 4.31175 5.39935 4.45602 5.54362C4.60029 5.68789 4.79594 5.76893 4.99994 5.76893C5.20394 5.76893 5.3996 5.68789 5.54387 5.54362C5.68814 5.39935 5.76917 5.2037 5.76917 4.9997C5.76917 4.7957 5.68814 4.60005 5.54387 4.45578C5.3996 4.31151 5.20394 4.23047 4.99994 4.23047Z" fill="#F3F4F5"/>
                    <path d="M6.1215 2.30762H3.87789C3.01211 2.30762 2.30762 3.01233 2.30762 3.87835V6.12192C2.30762 6.98773 3.01233 7.69223 3.87835 7.69223H6.12192C6.98773 7.69223 7.69223 6.9875 7.69223 6.1215V3.87789C7.69223 3.01211 6.9875 2.30762 6.1215 2.30762ZM4.99992 6.34608C4.2575 6.34608 3.65377 5.74235 3.65377 4.99992C3.65377 4.2575 4.2575 3.65377 4.99992 3.65377C5.74235 3.65377 6.34608 4.2575 6.34608 4.99992C6.34608 5.74235 5.74235 6.34608 4.99992 6.34608ZM6.57042 3.65377C6.44658 3.65377 6.34608 3.55326 6.34608 3.42941C6.34608 3.30557 6.44658 3.20505 6.57042 3.20505C6.69427 3.20505 6.79481 3.30557 6.79481 3.42941C6.79481 3.55326 6.69427 3.65377 6.57042 3.65377Z" fill="#F3F4F5"/>
                    </svg>

                    Instagram
                </a>
                <a
                    href={`https://${branches.find((branch) => branch.name === selectedBranch)?.whatsapp}`}
                    target="_blank"
                    rel="noopener noreferrer"
                    className="flex items-center bg-yellow-400 text-black px-3 py-2 rounded-full text-sm shadow w-1/2 justify-center active:scale-95 transition"
                >
                    <svg width="24" height="20" viewBox="0 0 10 10" fill="none" xmlns="http://www.w3.org/2000/svg">
                        <path d="M10 5.00036C10 2.34121 7.76142 0.185547 5 0.185547C2.23858 0.185547 0 2.34121 0 5.00036C0 7.65951 2.23858 9.81518 5 9.81518C7.76142 9.81518 10 7.65951 10 5.00036Z" fill="#202022"/>
                        <path d="M7.15425 2.71404C6.87218 2.43978 6.53621 2.22235 6.16595 2.07445C5.7957 1.92654 5.39856 1.85111 4.99771 1.85256C3.3181 1.85256 1.94925 3.17034 1.94771 4.78812C1.94771 5.30626 2.08848 5.81034 2.35425 6.25663L1.9231 7.77849L3.54002 7.37034C3.98713 7.60524 4.48839 7.72814 4.99771 7.72775H4.99925C6.67925 7.72775 8.04771 6.40997 8.04925 4.79071C8.04959 4.4048 7.97066 4.02265 7.81699 3.66624C7.66332 3.30984 7.43834 2.98623 7.15425 2.71404ZM4.99771 7.23071C4.54355 7.23036 4.0978 7.11269 3.70694 6.88997L3.61463 6.83663L2.6554 7.07886L2.91156 6.17775L2.85156 6.08478C2.59764 5.69601 2.46334 5.2459 2.46425 4.78663C2.46425 3.44367 3.60156 2.34812 4.99925 2.34812C5.33223 2.34754 5.66203 2.41044 5.96964 2.53319C6.27726 2.65593 6.5566 2.8361 6.79156 3.0633C7.02729 3.28965 7.21417 3.55869 7.34144 3.8549C7.46871 4.15112 7.53384 4.46866 7.5331 4.78923C7.53156 6.137 6.39425 7.23071 4.99771 7.23071ZM6.3881 5.4033C6.31233 5.36663 5.9381 5.18923 5.86771 5.16404C5.79771 5.13997 5.74656 5.12737 5.69656 5.20071C5.6454 5.27367 5.49925 5.43997 5.4554 5.48774C5.41156 5.537 5.36617 5.54256 5.29002 5.50626C5.21425 5.46923 4.96848 5.39219 4.67771 5.14145C4.45079 4.947 4.29887 4.70626 4.25348 4.6333C4.20963 4.55997 4.24925 4.52071 4.28733 4.48404C4.32079 4.45145 4.3631 4.39812 4.40117 4.35589C4.43963 4.31367 4.45233 4.28256 4.47733 4.23367C4.50233 4.18404 4.4904 4.14182 4.47156 4.10515C4.45233 4.06849 4.3004 3.70663 4.23617 3.56071C4.17463 3.41663 4.11194 3.43663 4.06502 3.43478C4.02117 3.43219 3.97002 3.43219 3.91886 3.43219C3.88024 3.43314 3.84223 3.44175 3.80722 3.45749C3.77221 3.47323 3.74096 3.49576 3.7154 3.52367C3.6454 3.597 3.44963 3.77441 3.44963 4.13626C3.44963 4.49812 3.72271 4.84589 3.76117 4.89515C3.79886 4.94441 4.29733 5.68478 5.06233 6.0033C5.2431 6.07923 5.3854 6.12404 5.49656 6.15812C5.67925 6.21441 5.84425 6.20589 5.97579 6.18775C6.12194 6.16626 6.42617 6.00997 6.4904 5.83849C6.55348 5.66663 6.55348 5.51997 6.53425 5.48923C6.5154 5.45812 6.46425 5.43997 6.3881 5.4033Z" fill="#F3F4F5"/>
                    </svg>
                    WhatsApp
                </a>
            </div>
        </div>
    );
};

export default AddressContainer;
